---
title: Swiper Utilities
description: How to Work with the Swiper Utilities
sidebar:
    badge:
        text: updated
        variant: caution
---

import { Code } from '@astrojs/starlight/components';

# Swiper Utilities

## How to work with the Swiper Utilities

**Import the Component into the Head**

export const importUtils = `
use EverydayElementor\\Utilities\\Swiper_Utils;
`

<Code code={importUtils} lang="php"/>

<hr />

**Use the Component in controls**

export const useUtilsSwiper = `
Swiper_Utils::add_swiper_control($this, 1, 32);
`

<Code code={useUtilsSwiper} lang="php" />

<hr />

**Use the Component in the render method**

We are set our slides per view in the render method.

export const renderUtils = `
$json_slides_per_view = Swiper_Utils::setSlidesPerView($settings);
`

<Code code={renderUtils} lang="php" />

<hr />

## Add the utils to the registration of all widgets

export const registerUtils = `
require_once(__DIR__ . '/widgets/utilities/swiper-utilities.php');
`

<Code code={registerUtils} lang="php" />

## Utils class and render methode

export const utilsClass = `
<?php

namespace EverydayElementor\\Utilities;

use Elementor\\Group_Control_Image_Size;

class Swiper_Utils
{
    public static function add_swiper_control($widget, $slidesPerView = "1", $spaceBetween = "16")
    {

        $widget->add_control(
            'loop',
            [
                'label' => esc_html__('Loop', 'textdomain'),
                'type' => \\Elementor\\Controls_Manager::SWITCHER,
                'label_on' => esc_html__('true', 'textdomain'),
                'label_off' => esc_html__('false', 'textdomain'),
                'return_value' => 'true',
                'default' => 'true',
            ]
        );

        $widget->add_control(
            'autoplay',
            [
                'label' => esc_html__('Autoplay', 'textdomain'),
                'type' => \\Elementor\\Controls_Manager::SWITCHER,
                'label_on' => esc_html__('true', 'textdomain'),
                'label_off' => esc_html__('false', 'textdomain'),
                'return_value' => 'true',
                'default' => 'true',
            ]
        );

        $widget->add_control(
            'autoplay_speed',
            [
                'label' => esc_html__('Autoplay Speed', 'textdomain'),
                'type' => \\Elementor\\Controls_Manager::NUMBER,
                'default' => 5000,
                'condition' => [
                    'autoplay' => 'true',
                ],
            ]
        );

        $widget->add_control(
            'pagination',
            [
                'label' => esc_html__('Paginationspunkte', 'textdomain'),
                'type' => \\Elementor\\Controls_Manager::SWITCHER,
                'label_on' => esc_html__('Show', 'textdomain'),
                'label_off' => esc_html__('Hide', 'textdomain'),
                'return_value' => 'yes',
                'default' => 'no',
            ]
        );

        $widget->add_control(
            'arrows',
            [
                'label' => esc_html__('Arrows', 'textdomain'),
                'type' => \\Elementor\\Controls_Manager::SWITCHER,
                'label_on' => esc_html__('Show', 'textdomain'),
                'label_off' => esc_html__('Hide', 'textdomain'),
                'return_value' => 'yes',
                'default' => 'no',
            ]
        );

        $widget->add_responsive_control(
            'slides_per_view',
            [
                'label' => esc_html__('Slides per view', 'textdomain'),
                'type' => \\Elementor\\Controls_Manager::TEXT,
                'default' => $slidesPerView,
            ]
        );

        $widget->add_responsive_control(
            'space_between',
            [
                'label' => esc_html__('Space between', 'textdomain'),
                'type' => \\Elementor\\Controls_Manager::NUMBER,
                'default' => $spaceBetween,
            ]
        );
    }

    public static function setSlidesPerView($settings)
    {
        $slides_per_view_array = array();


        if (!empty($settings["slides_per_view"])) {
            $slides_per_view_array["1440"] = [
                "slides_per_view" => $settings["slides_per_view"],
                "space_between" => $settings["space_between"]
            ];
        }

        if (!empty($settings["slides_per_view_laptop"])) {
            $slides_per_view_array["1024"] = [
                "slides_per_view" => $settings["slides_per_view_laptop"],
                "space_between" => $settings["space_between_laptop"]
            ];
        }

        if (!empty($settings["slides_per_view_tablet"])) {
            $slides_per_view_array["768"] = [
                "slides_per_view" => $settings["slides_per_view_tablet"],
                "space_between" => $settings["space_between_tablet"]
            ];
        }

        if (!empty($settings["slides_per_view_tablet_extra"])) {
            $slides_per_view_array["640"] = [
                "slides_per_view" => $settings["slides_per_view_tablet_extra"],
                "space_between" => $settings["space_between_tablet_extra"]
            ];
        }

        if (!empty($settings["slides_per_view_mobile_extra"])) {
            $slides_per_view_array["480"] = [
                "slides_per_view" => $settings["slides_per_view_mobile_extra"],
                "space_between" => $settings["space_between_mobile_extra"]
            ];
        }

        if (!empty($settings["slides_per_view_mobile"])) {
            $slides_per_view_array["320"] = [
                "slides_per_view" => $settings["slides_per_view_mobile"],
                "space_between" => $settings["space_between_mobile"]
            ];
        }

        // Convert to JSON string for JavaScript
        return $json_slides_per_view = htmlspecialchars(json_encode($slides_per_view_array), ENT_QUOTES, 'UTF-8');
    }

    public static function render_image($items, $id = "image", $class = "")
    {
?>
        <?php foreach ($items as $item) : ?>
            <div class="swiper-slide header-swiper__slide">
                <?php echo wp_get_attachment_image(
                    $item['id'],
                    "full",
                    "",
                    [
                        "class" => $class,
                        "loading" => "eager",
                    ]
                ); ?>
            </div>
        <?php endforeach; ?>

<?php
    }
}
`

<Code code={utilsClass} lang="php" />
